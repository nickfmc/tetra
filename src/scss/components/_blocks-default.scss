/* ==========================================================================
	 BLOCK EDITOR GENERATED STYLES
	 ========================================================================== */

// A lot of time went into testing this and making it work with 3rd party blocks and get nesting of blocks to work, any changes here should be really tested and considered before modifying.

$paddingHorizontal: 25px; 
.editor-content {
 
  padding: 0 $paddingHorizontal;
}


.editor-content > *  { 
  max-width: $wrapper-width-base;
  margin-left: auto;
  margin-right: auto;
  > div[class*="wp-block"] {
    max-width: $wrapper-width-base;
    margin-left: auto;
    margin-right: auto;
  }
}

.editor-content > .alignwide, .editor-content > .is-style-alignwide {
  width: $wrapper-width-wide;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  > div[class*="wp-block"] {
    max-width: $wrapper-width-base;
    margin-left: auto;
    margin-right: auto;
  }
  > div[class*="wp-block"].alignwide {
    width: $wrapper-width-wide;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
  }
}

.editor-content > .gb-container.alignfull, .editor-content > [class^="gb-element-"].alignfull,.editor-content > .alignfull  {
  padding-left: 25px;
  padding-right: 25px;
  position: relative;

 }

 #main-content [class^="gb-element-"] > *:last-child {
  margin-bottom: 0;
}



.editor-content > .alignfull {
  transform: translateX(calc(0px - #{$paddingHorizontal}));
  width: calc(100% + 2 * #{$paddingHorizontal});
  max-width: 100vw;
  margin-left: auto;
  margin-right: auto;

  > div[class*="wp-block"] {
    max-width: $wrapper-width-base;
    margin-left: auto;
    margin-right: auto;
    &.alignwide {
      width: $wrapper-width-wide;
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
    }
  }
  // used when alignfull content has bg image that is position fixed.
  &.parafull {
    transform: none;
    left: -25px;
  }
}

.editor-content > .gb-container.alignfull {
  padding-left: 25px;
  padding-right: 25px;
  position: relative;

 }


.aligncenter {
  text-align: center;
  justify-content: center;
}

.editor-content .alignleft {
  float: left;
  margin-right: 2em;
  max-width: 360px;
}

.editor-content .alignright {
  float: right;
  margin-left: 2em;
  max-width: 360px;
}       

.is-style-secondaryfont {
  font-family: $font-secondary;
}

// ++ table block ++++++++++++++++++++++++++++
.wp-block-table {
  border: 2px solid $color-gray-400;
  & th {
    text-align: center;
  }
  & th, & td {
    border: 2px solid $color-gray-400;
    padding: 10px;
    color: $color-gray-700;
    line-height: 1.2;
  }
  & tr:first-of-type {
    text-align: center;
    & td {
        padding: 30px 10px;
    }  
  }
}



// ++ ul list block (with custom class added) +++++++++++++++++++++++++++++++++
.editor-content ul {
  list-style-type: none;
  margin: 1rem 0 1rem 20px;
  padding: 0;
  overflow: hidden;
  @media(width >= $bp-large) {
  margin-left: 20px;
  } 
}
.editor-content ul li {
  margin: 0;
  padding: 0 0 9px 15px;
  position: relative;
  // font-size: clamped(18px, 20px);
  color: $color-tetra-blue;
  font-weight: 300;
}
.editor-content ul li::before {
  display: block;
  background-color: $color-tetra-blue-alt;
  border-radius: 50%;
  content: "";
	position: absolute;
  width: 6px;
  height: 6px;
  top: 0.58em;
  left: 0;
}

.editor-content  .stk-block-icon-list  ul {
 overflow: visible; 

  li {
    &::before {
      display: none;
    }
  }
}


// ++ ol list block (with custom class added) +++++++++++++++++++++++++++++++++
.editor-content ol {
  counter-reset: item;
  margin: 1rem 0 1rem 30px;
  padding: 0;
  overflow: hidden;
}
.editor-content ol > li {
  padding: 0 0 0.5rem 1.4rem;
  position: relative;
  text-indent: -1.4rem;
}
.editor-content ol > li::before {
  content: counter(item);
  counter-increment: item;
  color: #000;
  font-weight: 400;
  position: relative;
	top: 0;
	width: 1.3rem;
	margin: 0 0.8rem 0 0;
}



//buttons
.wp-block-buttons .wp-block-button:last-of-type {
  margin-right: 0;
}

// WP Columns
// lets match columns to our break points.
body .wp-block-column {
  @media(width <=$bp-medium) {
    flex-basis: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}
// wp-5.7 fix
body .wp-block-column:not(:only-child) {
  @media(width <=$bp-medium) {
    flex-basis: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}

 // prevent wide columns not having a gutter
 .editor-content .wp-block-column:not(:first-child) {
  @media(width >= $bp-medium) {
    margin-left: 2em;
  } 
}

// we need a no gutter style
.is-style-no-gutter {
  .wp-block-column {
    margin-left: 0;
    margin-right: 0;
  }
}


body .u-break-early {
	@media(width <=$bp-large) {
	flex-direction: column;
   .wp-block-column {
	  flex-basis: 100% !important;
	  max-width: 100%;
	  margin: 0 0 25px 0 !important;
	}
   }
  }


  .has-large-font-size {
    line-height: 1.4;
    font-weight: 300;
  }

  .has-small-font-size {
  line-height: 1.8;
  }

  .wp-block-image {
    margin-bottom: 10px;
    margin-top: 10px;
  }

  .has-white-color {
    color: #fff !important;
    p {
      color: #fff !important;
    }
  }

  // Popups
  .white-popup-block {
    background: #f3f5f3;
    padding: 50px;
    text-align: left;
    max-width: 1080px;
    margin: 40px auto;
    position: relative;
    p {
      font-size: 16px;
      font-weight: 300;
    }
  }

  .mfp-bg {
    background: #fff;
    opacity: 1;
  }

  .popup-modal-dismiss {
    position: absolute;
    right: 20px;
    top: 20px;
    text-transform: uppercase;
    color: $color-tetra-blue;
    font-size: 14px;
    span {
      color: $color-tetra-blue-light;
      font-weight: 300;
      margin-left: 10px;
    }
  }
.mfp-arrow-right::before  {
    border-left-color: $color-tetra-blue;
  }

  .mfp-arrow-left::before {
    border-right-color: $color-tetra-blue;

  }

  .c-staff-member-grid {
    display: flex;
    flex-flow: row wrap;
    gap: 20px;
    > div {
     
      
      @media(width >= $bp-medium) {
        width: calc(50% - 10px);
      } 
      @media(width >= $bp-large) {
        width: calc(33% - 12px);
      
      } 
      img {
        margin-bottom: 20px;
      }
      h5 {
        color: $color-tetra-blue-light;
        font-size: 18px;
        margin-bottom: 3px;
      }
    }
  }

  .c-staff-title {
    color: $color-tetra-blue;
    font-size: 18px;
    font-weight: 300;
    margin-bottom: 0;
  }

  .c-staff-member-trigger a {
    display: flex;
    align-items: center;
    svg {
      margin-left: 5px;
      width: 20px;
    }
  }

  .c-staff-img {
    position: relative;
    img {
      filter: grayscale(100%);
      transition: all 0.3s ease-in-out;
      &:hover {
        filter: grayscale(0%);
      }
    }

  }

  .c-staff-member {
    position: relative;
  }

  .c-staff-member:hover {
    .c-staff-img img {
      filter: grayscale(0%);
    }
    .c-staff-img-overlay {
      opacity: 1;
      span {
        transform: translateY(0);
      }
    }
  }

  .c-staff-img-overlay {
    position: absolute;
    overflow: hidden;
    z-index: 10;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: all 0.3s ease-in-out;
    background: rgba(0,0,0,0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    span {
      color: #fff;
      font-size: 16px;
      font-weight: 300;
      text-align: center;
      text-transform: uppercase;
      position: absolute;
      bottom: 0;
      transform: translateY(100%);
      padding: 12px;
      background-color: rgba(51, 92, 109, 0.6);
      width: 100%;
      transition: transform 0.3s ease-in-out;
    }
   
  }

  .c-hero-left {
   flex-shrink: 1;
  }

  .personalmeta {
    background: #e0e6e5;
  border-radius: 0 0 10px 10px;
  
    div {
        a {
          padding: 9px 13px;
          border-bottom: 1px solid #fff;
          display: flex;
          flex-flow: row wrap;
          gap:8px;
          font-weight: 300;
          transition: $transition-ease;
          transition: color 0.5s ease;
          background-size: 200% auto;
          background-position: right bottom;
          background-repeat: no-repeat;
          position: relative;
          overflow: clip;
          span {
            display: flex;
          flex-flow: row wrap;
          gap:8px;
          font-weight: 300;
          transition: $transition-ease;
          transition: color 0.5s ease;
          z-index: 2;
          }

          &:before {
            content: "";
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-image: linear-gradient(to right, #88aebd 0%, #9b9477 100%);
            opacity: 0;
            transition: all 0.5s ease;
            z-index: 1;
            transform: translateX(-100%);
        }



          &:hover {
            // animation: gradient 1s ease-in-out forwards;
          // background-image: linear-gradient(to right, #88aebd 0%, #9b9477 100%);
            color: #fff;
            &:before {
              opacity: 1;
              transform: translateX(0);
          }
          }
        }
        &:last-of-type a {
          border-radius: 0 0 10px 10px;
          border-bottom: none;
          &:hover {
            border-radius: 0 0 10px 10px;
          }
          &:before {
            border-radius: 0 0 10px 10px;
          }
        }
    }
  }

  @keyframes gradient {
    0% {
        background-position: left bottom;
    }
    100% {
        background-position: right bottom;
    }
}